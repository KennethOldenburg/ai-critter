---
version: '3.7'
services:
  camera:
    container_name: "ai-critter-cam"
    build: 
      context: ./camera-app
    image: ai-critter/camera
    init: true
    volumes:
      - ./camera-app/:/usr/app/
      - /opt/vc:/opt/vc
      - ./data/:/data/
    devices:
      - /dev/video0:/dev/video0
    command: python3 /usr/app/ai-critter.py
    environment:
      - DB_PATH=/data/model.db
      - MODEL_PATH=/data/ai_critter_prod.pkl
      - AI-CRITTER_PATH=/usr/app
      - DATA_DIR=/data
    # runtime: "nvidia"
    env_file:
      - settings.env
    restart: unless-stopped

  webapp:
    container_name: "ai-critter-web"
    build:
      context: ./webapp
    image: ai-critter/webapp
    init: true
    command: flask run --host=0.0.0.0
    working_dir: /app
    volumes:
      - ./webapp/ai-critter-app:/app
      - ./data/:/data/
    ports:
      - "8080:5000"
    env_file:
      - settings.env
    environment:
      - DB_PATH=/data/model.db
      - FLASK_APP=app.py
      - MODEL_PATH=/data/ai_critter_prod.pkl
      - AI-CRITTER_PATH=/app
      - DATA_DIR=/data
    # runtime: "nvidia"
    restart: unless-stopped
    
  yacht:
    container_name: yacht
    image: selfhostedpro/yacht
    ports:
      - 8000:8000
    volumes:
      - /yacht:/config
      - /var/run/docker.sock:/var/run/docker.sock
    restart: unless-stopped
